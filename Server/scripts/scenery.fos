// Author: cvet, heX, Tab10id
#include "_macros.fos"
#include "stdlib_h.fos"
#include "entire.fos"

bool s_Dialog( Critter& player, Scenery& scenery, int skill, Item@ item, int dialogId )
{
    // Запускаем диалог, если игрок не применял к сценери скилл или итем
    if( skill == -1 && not valid( item ) )
    {
        return Mk2RunDialog( player, dialogId, player.GetMap(), scenery.HexX, scenery.HexY, false );
    }
    return false;
}

bool s_DoorControl( Critter& player, Scenery& scenery, int skill, Item@ item, int entireNum, int toOpen )
{
    if( toOpen == 1 )
    {
        DoorControl( player, entireNum, true );
    }
    else
    {
        DoorControl( player, entireNum, false );
    }
    return true;
}

bool s_TransitToMap( Critter& player, Scenery& scenery, int skill, Item@ item, int locPid, int mapIndex, int entire )
{
    if( player.Timeout[ TO_BATTLE ] == 0 )
        return TransitToMap( player, locPid, mapIndex, entire );
    else
        return false;
}

bool s_ToMapEntire( Critter& player, Scenery& scenery, int skill, Item@ item, int locPid, int mapIndex, int entire )
{
    if( player.Timeout[ TO_BATTLE ] == 0 )
        return TransitToMap( player, locPid, mapIndex, entire );
    else
        return false;
}

bool s_TransitToThisMap( Critter& player, Scenery& scenery, int skill, Item@ item, int locPid, int mapIndex, int entire )
{
    if( player.Timeout[ TO_BATTLE ] != 0 )
        return false;
    Location@ loc = player.GetMap().GetLocation();
    if( not valid( loc ) )
        return false;
    Map@ toMap = loc.GetMapByIndex( mapIndex );
    if( not valid( toMap ) || toMap.CountEntire( entire ) == 0 )
        return false;
    return player.TransitToMap( toMap.Id, entire );
}
