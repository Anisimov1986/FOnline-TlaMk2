// Author: Atom
#ifndef __LINE_TRACER__
#define __LINE_TRACER__

shared interface ITraceContext
{
    #ifdef __SERVER
    bool Exec( Map& map, uint16 hx, uint16 hy );   // return true to stop tracing
    # define ExecMutual    # ( hx, hy )Exec( Map & map, hx, hy )
    #endif
    #ifdef __CLIENT
    bool Exec( uint16 hx, uint16 hy );   // return true to stop tracing
    # define ExecMutual    # ( hx, hy )Exec( hx, hy )
    #endif
}

#ifndef __LINETRACER_MODULE__
# ifdef __SERVER
import uint LineTracerHex( uint16 hx, uint16 hy, uint16 tx, uint16 ty, Map& map, uint dist, ITraceContext@ context ) from "linetracer";
import uint LineTracerSquare( uint16 hx, uint16 hy, uint16 tx, uint16 ty, Map& map, uint dist, ITraceContext@ context ) from "linetracer";
# endif
# ifdef __CLIENT
import uint LineTracerHex( uint16 hx, uint16 hy, uint16 tx, uint16 ty, uint dist, ITraceContext@ context ) from "linetracer";
import uint LineTracerSquare( uint16 hx, uint16 hy, uint16 tx, uint16 ty, uint dist, ITraceContext@ context ) from "linetracer";
# endif
import float get_TraceAllDist1() from "linetracer";
import float get_TraceAllDist2() from "linetracer";
import float get_MaxTraceAllDist1() from "linetracer";
import float get_MaxTraceAllDist2() from "linetracer";
#endif

#endif
