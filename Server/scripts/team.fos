#include "_macros.fos"
#define TEAM_NOTIFICATION_TIME    ( REAL_MINUTE( 1 ) )
// AddTimeEvent (string& funcName, uint duration, int identifier, uint rate)
// AddTimeEvent ("cte_TeamNotification", TEAM_NOTIFICATION_TIME, CTE_TEAM_NOTIFICATION, uint rate)
// uint cte_FuncName(Critter& cr, int identifier, uint& rate)
// CTE_TEAM_NOTIFICATION

void answer_MoveToGlobal( Critter& player, uint answerI, string& answerS )
{
    if( player.Timeout[ TO_BATTLE ] == 0 )
    {
        uint[] var, rates, indexes;
        if( player.GetTimeEvents( CTE_TEAM_NOTIFICATION_GM, indexes, var, rates ) == 1 )
        {
            Critter@ leader = GetCritter( rates[ 0 ] );
            // Log( "" + leader.GetGlobalGroupTimeCanFollow() + " " + leader.GetGlobalGroupProcessLastTick() + " " + player.StatBase[ST_TEAM_VAR] );
            if( valid( leader ) && leader.GetGlobalGroupTimeCanFollow() > leader.GetGlobalGroupProcessLastTick() && uint( player.StatBase[ ST_TEAM_VAR ] ) == leader.GetGlobalGroupTimeCanFollow() )
            {
                player.StatBase[ ST_TEAM_VAR ] = 1;
                if( player.TransitToGlobalGroup( rates[ 0 ] ) )
                    player.EraseTimeEvent( indexes[ 0 ] );
            }
        }
    }
}

uint cte_MoveToGlobal( Critter& cr, int identifier, uint& id ) { return 0; }
// uint  GetFollowGroup (int findType, Critter@[]@+ critters)
uint GetTeamCritters( int findType, Critter@[] @ + critters, Critter& cr )
{
    uint     len = 0;

    Critter@ leader = cr;
    if( cr.Stat[ ST_FOLLOW_CRIT ] != 0  )
        @ leader = GetCritter( cr.Stat[ ST_FOLLOW_CRIT ] );

    if( valid( leader ) )
    {
        critters.insertLast( @leader );
        len++;
        len += leader.GetFollowGroup( findType, critters );
    }
    return len;
}

uint cte_TeamNotification( Critter& cr, int identifier, uint& id )
{
    // Log( "!" );
    /*Critter@ leader = GetCritter( id );
       if( valid( leader ) && cr.StatBase[ST_TEAM_VAR] == id )
       {
            cr.StatBase[ST_TEAM_VAR] = leader.GetGlobalGroupTimeCanFollow();
            cr.ShowScreen(SCREEN_DIALOGBOX, 1, "team@answer_MoveToGlobal");
            cr.SayMsg(SAY_DIALOGBOX_TEXT,TEXTMSG_GAME,951, "$pName"+leader.Name);
            cr.SayMsg(SAY_DIALOGBOX_BUTTON( 0 ),TEXTMSG_GAME,312);
       }*/
    return 0;
}

void KillTeam( Critter& player )
{
    array< Critter@ > crs;
    uint              len = 0;

    if( player.Stat[ ST_FOLLOW_CRIT ] == 0  )
        len = player.GetFollowGroup( FIND_LIFE | FIND_ONLY_PLAYERS, crs );
    else
    {
        Critter@ leader = GetCritter( player.Stat[ ST_FOLLOW_CRIT ] );
        if( valid( leader ) )
            len = leader.GetFollowGroup( FIND_LIFE | FIND_ONLY_PLAYERS, crs );
    }
    for( uint i = 0; i < len; i++ )
        if( valid( crs[ i ] ) && crs[ i ].IsPlayer() )
            crs[ i ].RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
    player.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
}

void UpdateCritterTeam( Critter& player, uint& inout leadId  )
{
    array< Critter@ > crs;
    uint              len = 0;
    Critter@          leader = player;
    if( player.Stat[ ST_FOLLOW_CRIT ] == 0  )
    {
        len = player.GetFollowGroup( FIND_LIFE | FIND_ONLY_PLAYERS, crs );
        if( leadId == 0 )
            leadId = player.Id;
    }
    else
    {
        @ leader = GetCritter( player.Stat[ ST_FOLLOW_CRIT ] );
        if( valid( leader ) )
        {
            if( leadId == 0 )
                leadId = leader.Id;
            len = leader.GetFollowGroup( FIND_LIFE | FIND_ONLY_PLAYERS, crs );
        }
    }
    if( len != 0 && valid( leader ) )
    {
        crs.insertLast( @player );
        ++len;
    }
    UpdateCritterTeam( crs, len, leadId );
}

void UpdateCritterTeam( Critter@[]& crs, const uint& in leadId  )
{
    UpdateCritterTeam( crs, crs.length(), leadId );
}

void UpdateCritterTeam( Critter@[]& crs, uint& in len, const uint& in leadId )
{

    string       Names;
    array< int > Ids;

    for( uint i = 0; i < len; i++ )
        if( valid( crs[ i ] ) && crs[ i ].IsPlayer() )
        {
            Names = "" + Names + "@" + GetPlayerName( crs[ i ].Id );
            Ids.insertLast( int(crs[ i ].Id) );
        }
    for( uint i = 0; i < len; i++ )
        if( valid( crs[ i ] ) && crs[ i ].IsPlayer() )
            crs[ i ].RunClientScript( "client_team@__update_team", len, leadId, 0, Names, Ids );
}

void change_follow( Critter& cr, uint, int oldValue )
{
    if( cr.IsPlayer() )
    {
        int currentValue = cr.Stat[ ST_FOLLOW_CRIT ];
        if( oldValue == currentValue )         // Оставляем как было.
            return;


        Critter@ follow = cr;
        if( oldValue < 0 && currentValue == 0 )         // обнуляем запрос на вступление в пати.
        {
            @ follow = GetCritter( cr.Stat[ ST_TEAM_VAR ] );
            cr.StatBase[ ST_TEAM_VAR ] = 0;
            cr.StatBase[ ST_FOLLOW_CRIT ] = 0;

            if( valid( follow ) )
                follow.RunClientScript( "client_team@__is_critter_in_team", 0, 1, 0, GetPlayerName( cr.Id ), null );
            return;
        }

        if( cr.Stat[ ST_TEAM_VAR ] == currentValue && currentValue > 0 )         // Если запрос уже отправлен, оставляем как есть.
        {
            cr.StatBase[ ST_FOLLOW_CRIT ] = oldValue;
            return;
        }

        if( currentValue != 0 )          // Иначе отправляем запрос лидеру.
        {
            if( currentValue < 0 )
                return;

            if( currentValue != currentValue * 2 + oldValue )
            {
                @ follow = GetCritter( currentValue );
                if( valid( follow ) && follow.Stat[ ST_FOLLOW_CRIT ] == 0 )
                {
                    cr.StatBase[ ST_FOLLOW_CRIT ] = 0 - currentValue;
                    follow.RunClientScript( "client_team@__is_critter_in_team", cr.Id, 0, 0, GetPlayerName( cr.Id ), null );
                    cr.StatBase[ ST_TEAM_VAR ] = follow.Id;
                }
                else
                    cr.StatBase[ ST_FOLLOW_CRIT ] = 0;
                return;
            }
        }

        array< Critter@ > crsTeam;
        uint              count = 0;

        if( currentValue == 0 )
        {
            count = cr.GetFollowGroup( FIND_LIFE | FIND_ONLY_PLAYERS, crsTeam );
            if( count != 0 )
            {
                cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 104053 );
                Critter@ currentCr;
                for( uint i = 0; i < count; i++ )
                {
                    @ currentCr = crsTeam[ i ];
                    if( not (currentCr is null) && cr.Id != currentCr.Id )
                    {
                        currentCr.StatBase[ ST_FOLLOW_CRIT ] = 0;
                        currentCr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 104053 );
                        currentCr.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
                    }
                }
                count = 0;
            }
            cr.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
            return;
        }
        else
        {
            count = follow.GetFollowGroup( FIND_LIFE | FIND_ONLY_PLAYERS, crsTeam );
            if( count != 0 )
            {
                follow.StatBase[ ST_FOLLOW_CRIT ] = 0;
                cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 104084 );
                return;
            }

            @ follow = GetCritter( currentValue );
            if( not (follow is null) )
            {
                if( follow.Stat[ ST_FOLLOW_CRIT ] == 0 )
                {
                    count = follow.GetFollowGroup( FIND_LIFE | FIND_ONLY_PLAYERS, crsTeam );
                    if( count < uint( ( 4 + follow.Stat[ ST_CHARISMA ] / 2 ) + follow.Perk[ PE_MAGNETIC_PERSONALITY ] ) )
                        follow.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 104054, "$name" + GetPlayerName( cr.Id ) );
                    else
                    {
                        cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 104055 );
                        cr.StatBase[ ST_FOLLOW_CRIT ] = oldValue;
                    }
                }
                else
                {
                    cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 104056, "$name" + GetPlayerName( follow.Stat[ ST_FOLLOW_CRIT ] ) );
                    cr.StatBase[ ST_FOLLOW_CRIT ] = oldValue;
                }
                crsTeam.insertLast( @follow );
                count++;
            }
            else
            {
                cr.StatBase[ ST_FOLLOW_CRIT ] = oldValue;
                return;
            }
        }


        if( oldValue != 0 )
        {
            Critter@ oldFollow = GetCritter( oldValue );
            if( not (oldFollow is null) )
            {
                oldFollow.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 104057, "$name" + GetPlayerName( cr.Id ) );
                array< Critter@ > oldCrsTeam;
                uint              oldCount = oldFollow.GetFollowGroup( FIND_LIFE | FIND_ONLY_PLAYERS, oldCrsTeam );
                if( oldCount == 0 )
                    oldFollow.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
                else
                {
                    oldCrsTeam.insertLast( @oldFollow );
                    UpdateCritterTeam( oldCrsTeam, ++oldCount, oldFollow.Id );
                }
            }

        }
        UpdateCritterTeam( crsTeam, count, follow.Id );
    }
}

void unsafe_team_in( Critter& player, int id, int isYes, int, string@ name, int[] @ )
{
    Critter@ cr = GetCritter( id );
    if( not valid( cr ) )
        @ cr = GetPlayer( name );
    if( valid( cr ) && cr.Stat[ ST_FOLLOW_CRIT ] == int(0 - player.Id) && uint( cr.Stat[ ST_TEAM_VAR ] ) == player.Id )
    {
        cr.StatBase[ ST_TEAM_VAR ] = 0;
        cr.StatBase[ ST_FOLLOW_CRIT ] = isYes == 1 ? player.Id : 0;
    }
}

void unsafe_team_out( Critter& player, int, int, int, string@ name, int[] @ )
{
    if( valid( name ) )
    {
        Critter@ cr = GetPlayer( name );
        if( valid( cr ) )
        {
            if( uint( cr.StatBase[ ST_FOLLOW_CRIT ] ) == player.Id )
            {
                array< Critter@ > crsTeam;
                uint              count = player.GetFollowGroup( FIND_LIFE | FIND_ONLY_PLAYERS, crsTeam );
                if( count > 1 )
                {
                    cr.StatBase[ ST_FOLLOW_CRIT ] = 0;
                    UpdateCritterTeam( player, player.Id  );
                    cr.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
                }
                else
                {
                    player.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 104053 );
                    Critter@ currentCr;
                    for( uint i = 0; i < count; i++ )
                    {
                        @ currentCr = crsTeam[ i ];
                        if( not (currentCr is null) )
                        {
                            currentCr.StatBase[ ST_FOLLOW_CRIT ] = 0;
                            currentCr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 104053 );
                            currentCr.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
                        }
                    }
                    player.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
                }
            }
            else if( cr.Id == player.Id )
            {
                array< Critter@ > crsTeam;
                uint              count =  0;
                if( player.Stat[ ST_FOLLOW_CRIT ] == 0  )
                {
                    count = cr.GetFollowGroup( FIND_LIFE | FIND_ONLY_PLAYERS, crsTeam );
                    if( count != 0 )
                    {
                        cr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 104053 );
                        Critter@ currentCr;
                        for( uint i = 0; i < count; i++ )
                        {
                            @ currentCr = crsTeam[ i ];
                            if( not (currentCr is null) )
                            {
                                currentCr.StatBase[ ST_FOLLOW_CRIT ] = 0;
                                currentCr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 104053 );
                                currentCr.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
                            }
                        }
                        cr.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
                    }
                }
                else
                {
                    Critter@ leader = GetCritter( player.Stat[ ST_FOLLOW_CRIT ] );
                    if( valid( leader ) )
                    {
                        count = leader.GetFollowGroup( FIND_LIFE | FIND_ONLY_PLAYERS, crsTeam );
                        if( count < 2 )
                        {
                            leader.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 104053 );
                            Critter@ currentCr = null;
                            for( uint i = 0; i < count; i++ )
                            {
                                @ currentCr = crsTeam[ i ];
                                if( not (currentCr is null) )
                                {
                                    currentCr.StatBase[ ST_FOLLOW_CRIT ] = 0;
                                    currentCr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 104053 );
                                    currentCr.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
                                }
                            }
                            leader.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
                        }
                        else
                        {
                            player.StatBase[ ST_FOLLOW_CRIT ] = 0;
                            UpdateCritterTeam( leader, leader.Id  );
                            cr.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
                        }
                    }
                    else
                        cr.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
                }
            }
            else
                player.Say( SAY_NETMSG, "Player no team." );
        }
        else
            player.Say( SAY_NETMSG, "Not valid player." );
    }
    else if( player.StatBase[ ST_FOLLOW_CRIT ] != 0 )
    {
        array< Critter@ > crsTeam;
        uint              count =  0;
        int               oldValue = player.Stat[ ST_FOLLOW_CRIT ];

        Critter@          oldFollow = GetCritter( oldValue );
        player.StatBase[ ST_FOLLOW_CRIT ] = 0;
        if( not (oldFollow is null) )
        {
            oldFollow.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 104057, "$name" + GetPlayerName( player.Id ) );

            array< Critter@ > oldCrsTeam;
            uint              oldCount = oldFollow.GetFollowGroup( FIND_LIFE | FIND_ONLY_PLAYERS, oldCrsTeam );
            if( oldCount == 0 )
                oldFollow.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
            else
            {
                oldCrsTeam.insertLast( @oldFollow );
                UpdateCritterTeam( oldCrsTeam, ++oldCount, oldFollow.Id );
            }
        }
        player.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
    }
    else
    {
        array< Critter@ > crsTeam;
        player.GetFollowGroup( FIND_LIFE | FIND_ONLY_PLAYERS, crsTeam );
        uint              count =  crsTeam.length();

        player.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 104053 );
        Critter@ currentCr;
        for( uint i = 0; i < count; i++ )
        {
            @ currentCr = crsTeam[ i ];
            if( not (currentCr is null) )
            {
                currentCr.StatBase[ ST_FOLLOW_CRIT ] = 0;
                currentCr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT, 104053 );
                currentCr.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
            }
        }
        player.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
    }
}

void unsafe_team_list( Critter& player, int type, int, int, string@, int[] @ )
{
    if( type == 1 )
    {
        Critter@ follow = null;
        if( player.Stat[ ST_FOLLOW_CRIT ] != 0 )
            @ follow = GetCritter( player.Stat[ ST_FOLLOW_CRIT ] );

        array< Critter@ > crs;
        uint              len = 0;
        if( valid( follow ) )
        {
            for( uint i = 0, len = follow.GetFollowGroup( FIND_LIFE | FIND_ONLY_PLAYERS, crs ); i < len; i++ )
                player.Say( SAY_NETMSG, "" + GetPlayerName( crs[ i ].Id ) );
        }
        else
        {
            for( uint i = 0, len = player.GetFollowGroup( FIND_LIFE | FIND_ONLY_PLAYERS, crs ); i < len; i++ )
                player.Say( SAY_NETMSG, "" + GetPlayerName( crs[ i ].Id ) );

            if( len == 0 )
            {
                player.RunClientScript( "client_team@__update_team", 0, 0, 0, null, null );
                player.Say( SAY_NETMSG, "None team" );
            }
        }
    }
    else
    {
        uint leadId = player.Stat[ ST_FOLLOW_CRIT ];
        UpdateCritterTeam( player, leadId );
    }
}

void unsafe_get_coordinate( Critter& cr, int intId, int, int, string@, int[] @ ) {}

#define DE_CLIENT_DATA_LENGTH    ( 2 )
#define DE_CLIENT_CRTYPE         ( 0 )
#define DE_CLIENT_ID             ( 1 )

#define DE_ENTIRE_DATA_LENGTH    ( 2 )
#define DE_ENTIRE_HEXX           ( 0 )
#define DE_ENTIRE_HEXY           ( 1 )

void GetViewMapId( Critter& cr, int, int, int )
{
    Log( "" + cr.ViewMapId );
    if( valid( GetMap( cr.ViewMapId ) ) )
        Log( "" + GetMap( cr.ViewMapId ).Id );
    else
        Log( "no valid" );
}

void unsafe_get_entire_coordinate( Critter& cr, int mapPid, int, int, string@, int[] @ )
{
    Map@ map = GetMapByPid( mapPid, 0 );
    if( valid( map ) )
    {
        Item@[] items;
        cr.GetItemsByType( ITEM_TYPE_CAR, items );
        uint carPid = 0;
        uint EntireNumber = 0;
        if( items.length() > 0 )
        {
            carPid = items[ 0 ].GetProtoId();

        }

        string       names = "";
        Critter@[] crs = cr.GetGlobalGroup();
        uint         count = map.CountEntire( EntireNumber );
        array< int > eData;
        uint         countCritter = crs.length();
        eData.resize( DE_CLIENT_DATA_LENGTH * countCritter + count * DE_ENTIRE_DATA_LENGTH );

        for( uint i = 0; i < countCritter; i++ )
        {
            eData[ i * DE_CLIENT_DATA_LENGTH + DE_CLIENT_CRTYPE ] = valid( crs[ i ] ) ? crs[ i ].Stat[ ST_BASE_CRTYPE ] : 0;
            eData[ i * DE_CLIENT_DATA_LENGTH + DE_CLIENT_ID ] = valid( crs[ i ] ) ? crs[ i ].Id : 0;

            if( valid( crs[ i ] ) )
                names = names + "@" + crs[ i ].Name;
        }
        const uint entireStartIndex = DE_CLIENT_DATA_LENGTH * countCritter;
        uint16     hx = 0, hy = 0;
        for( uint i = 0; i < count; i++ )
        {
            map.GetEntireCoords( EntireNumber, i, hx, hy );
            eData[ entireStartIndex + i * DE_ENTIRE_DATA_LENGTH + DE_ENTIRE_HEXX ] = hx;
            eData[ entireStartIndex + i * DE_ENTIRE_DATA_LENGTH + DE_ENTIRE_HEXY ] = hy;
        }

        cr.RunClientScript( "client_team@__entire_data", count, countCritter, carPid, names, eData );
    }
}

#define DATA_MTC_COUNT_PARAM     ( 3 )
#define DATA_MTC_PARAM_ID        ( 0 )
#define DATA_MTC_PARAM_POS_X     ( 1 )
#define DATA_MTC_PARAM_POS_Y     ( 2 )

void unsafe_spawn_town( Critter& cr, int countCritter, int, int mapPid, string@, int[] @ mtcData )
{
    if( valid( mtcData ) && uint( countCritter ) == mtcData.length() / DATA_MTC_COUNT_PARAM )
    {
        uint16 ViewMapHx = 0, ViewMapHy = 0;
        uint8  ViewMapDir = 0;
        uint   ViewMapLocEnt = 0, ViewMapLocId = 0, mapid = cr.GetViewMapParams( ViewMapHx, ViewMapHy, ViewMapDir, ViewMapLocEnt, ViewMapLocId );

        // Log("mapid " + mapid + " ViewMapHx " + ViewMapHx + " ViewMapHy " + ViewMapHy + " ViewMapDir " + ViewMapDir + " ViewMapLocEnt " + ViewMapLocEnt + " ViewMapLocId " + ViewMapLocId );
        Location@ loc = GetLocation( ViewMapLocId );
        if( valid( loc ) )
        {
            Map@ map = loc.GetMap( mapPid );
            if( valid( map ) )
            {
                Critter@[] crs = cr.GetGlobalGroup();
                const uint lenCrs = crs.length();
                for( uint i = 0, iEnd = uint( countCritter ); i < iEnd; i++ )
                {
                    Critter@ c = GetCritter( mtcData[ i * DATA_MTC_COUNT_PARAM + DATA_MTC_PARAM_ID ] );
                    if( valid( c ) )
                    {
                        bool isGG = false;
                        for( uint j = 0; j < lenCrs; j++ )
                        {
                            if( valid( crs[ j ] ) && crs[ j ].Id == c.Id )
                                isGG = true;
                        }

                        if( isGG )
                            c.TransitToMap( map.Id, mtcData[ i * DATA_MTC_COUNT_PARAM + DATA_MTC_PARAM_POS_X ], mtcData[ i * DATA_MTC_COUNT_PARAM + DATA_MTC_PARAM_POS_Y ], c.Dir );
                    }
                }
            }
        }
    }
}
