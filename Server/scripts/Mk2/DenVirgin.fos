// FOS Server
// Author: Tab10id

enum Define
{
    AwayX     =  131 ,
    AwayY     =  225 ,

// home position = near Mom's Diner,
    HomeX     =  134 ,
    HomeY     =  255 ,

// states
    IsHome    =  0 ,
    IsAway    =  1
}

void _VirginInit( ::Critter& virgin, bool firstTime )
{
    //::__EventCritterIdle.SubscribeToCritter( @_VirginIdle , @virgin );
    virgin.SetEvent( CRITTER_EVENT_TALK, "DenVirgin::_VirginTalk" );

    if( ::CreateTimeEvent( ::__FullSecond + ::Random( 1, 60 ) * 60, "DenVirgin::e_Check", virgin.Id, false ) == 0 )
        Log( "Time event Check create fail, " + ::GetLastError() );

    virgin.StatBase[ ST_VAR0 ] = 0;
    virgin.StatBase[ ST_VAR1 ] = 0;
}

bool _VirginIdle( ::Critter@ virgin )
{
    if( virgin.HexX == 134 && virgin.HexY == 255 )
        virgin.SendMessage( 1220, 1, MESSAGE_TO_ALL_ON_MAP );
    else
        virgin.SendMessage( 1220, 0, MESSAGE_TO_ALL_ON_MAP );
	
    virgin.Wait( 10000 );
	return true;
}

bool _VirginTalk( ::Critter& virgin, ::Critter& player, bool attach, uint talkCount )
{
    // handle end of dialog
    if( !attach && virgin.StatBase[ ST_VAR1 ] == DenVirgin::Define::IsAway )
    {
        ::GameVar@ virginState = ::GetGlobalVar( GVAR_den_virgin );
        if( @virginState is null )
        {
            Log( "::GetGlobalVar(GVAR_den_virgin) fail." );
            return true; // no matter what to return
        }

        virginState = DenVirgin::Define::IsAway;
        // reset
        virgin.StatBase[ ST_VAR1 ] = DenVirgin::Define::IsHome;
        NpcPlanes::AddWalkPlane( virgin, 0, DenVirgin::Define::AwayX, DenVirgin::Define::AwayY, 2, false, 2 );
    }
    return true;
}

uint e_Check( uint[] @ values )
{
    ::Critter@ virgin = ::GetCritter( values[ 0 ] );
    if( @virgin is null ) return 0;

    ::GameVar@ virginState = ::GetGlobalVar( GVAR_den_virgin );
    if( @virginState is null ) Log( "::GetGlobalVar(GVAR_den_virgin) fail." );
    else
    {
        if( virgin.Stat[ ST_VAR0 ] == 0 && virginState == DenVirgin::Define::IsAway )
        {
            virginState = DenVirgin::Define::IsHome;
            NpcPlanes::AddWalkPlane( virgin, 0, DenVirgin::Define::HomeX, DenVirgin::Define::HomeY, 2, false, 2 );
        }
        else virgin.StatBase[ ST_VAR0 ]--;
    }

    return 60 * 60;
}

void r_GoAway( ::Critter& player, ::Critter@ virgin, int val )
{
    virgin.StatBase[ ST_VAR0 ] = 3;
    // delay plan execution to dialog end
    virgin.StatBase[ ST_VAR1 ] = DenVirgin::Define::IsAway;
}
