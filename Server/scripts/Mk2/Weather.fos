// FOS Server
// Autor: Tabak

void SetStorm(::Location& loc, int time)
{
	::array<int> values={0,REAL_MINUTE(time), loc.Id, loc.GetMapCount()};
	for(uint n=0; n<uint( values[3] ); n++)
	{
		::Map@ map=loc.GetMapByIndex(n);
		values.insertLast(map.GetTime()>=0?0:1);
		if(values.last()==0) continue;
		map.SetRain(100);
		map.PlaySound(::Random(0,1)==1?"GNTLWIND.ACM":"GNTLWIN1.ACM");
	}
	values.insertLast(0);
	::CreateTimeEvent(::__FullSecond+REAL_SECOND(1),"Weather::e_StartStorm", values, true);
}

uint e_StartStorm(::array<uint>@ values)
{
	::Location@ loc=::GetLocation(values[2]);
	if(!validEngineObject(loc)) return 0;
	::array<uint16> time={0,0,0,0,0,0,0};
	::GetGameTime(::__FullSecond, time[0], time[1], time[2], time[3], time[4], time[5], time[6]); 
	uint curTime=time[4]*60;
	for(uint n=0; n<values[3]; n++)
	{
		if(values[n+4]==0) continue;
		::Map@ map=loc.GetMapByIndex(n);
		if(values.last()==10)
		{
			map.SetTime(300);
			continue;
		}
		map.SetRain(100+values.last()*8);
		if(::Random(1,10)==5) map.PlaySound(::Random(0,1)==1?"GNTLWIND.ACM":"GNTLWIN1.ACM");
		if(map.GetTime()<0) map.SetTime(curTime);
		if(map.GetTime()<300) map.SetTime(map.GetTime()+(300-curTime)/10);
		else if(map.GetTime()>300) map.SetTime(map.GetTime()-(curTime-300)/10);
	}
	if(++values.last()>10)
	{
		::CreateTimeEvent(::__FullSecond+REAL_SECOND(1), "Weather::e_Storm", values, true);
		return 0;
	}
	return REAL_SECOND(6);
}

uint e_Storm(::array<uint>@ values)
{
	::Location@ loc=::GetLocation(values[2]);
	if(!validEngineObject(loc)) return 0;
	if(values[0]>=values[1])
	{
		::CreateTimeEvent(::__FullSecond+REAL_SECOND(1), "Weather::e_EndStorm", values, true);
		return 0;
	}
	
	uint nextStep=::Random(2,20);
	values[0]+=REAL_SECOND(nextStep);
	
	for(uint n=0; n<values[3];n++)
	{
		if(values[n+4]==0) continue;
		::Map@ map=loc.GetMapByIndex(n);
		::array<uint> vals={map.Id,::Random(4,12)};
		map.SetRain(::Random(180, 255));
		if(::Random(1,2)==2)
		{
			map.SetTime(720);
			map.PlaySound("HOWITZER.ACM");
			::CreateTimeEvent(::__FullSecond+REAL_MS(::Random(50,200)), "Weather::e_Lightning", vals, false);
		}
		else map.PlaySound(::Random(0,1)==1?"GNTLWIND.ACM":"GNTLWIN1.ACM");
	}
	return REAL_SECOND(nextStep);
}

uint e_Lightning(::array<uint>@ values)
{
	::Map@ map=::GetMap(values[0]);
	if(!validEngineObject(map)) return 0;
	if(--values[1]<=0)
	{
		map.SetTime(300);
		return 0;
	}
	else map.SetTime(::Random(400, 700));
	return ::Random(1,4);
}

uint e_EndStorm(::array<uint>@ values)
{
	::Location@ loc=::GetLocation(values[2]);
	if(!validEngineObject(loc)) return 0;
	::array<uint16> time={0,0,0,0,0,0,0};
	::GetGameTime(::__FullSecond, time[0], time[1], time[2], time[3], time[4], time[5], time[6]); 
	int curTime=time[4]*60;
	for(uint n=0; n<values[3]; n++)
	{
		if(values[n+4]==0) continue;
		::Map@ map=loc.GetMapByIndex(n);
		if(values.last()==0)
		{
			map.SetTime(-1);
			map.SetRain(0);
			continue;
		}
		map.SetRain(180-values.last()*8);
		if(::Random(1,10)==5) map.PlaySound(::Random(0,1)==1?"GNTLWIND.ACM":"GNTLWIN1.ACM");
		if(map.GetTime()<curTime) map.SetTime(map.GetTime()+(curTime-map.GetTime())/10);
		else if(map.GetTime()>curTime) map.SetTime(map.GetTime()-(map.GetTime()-curTime)/10);
	}
	Log("End values="+values.last());
	if(values.last()==0) return 0;
	values.last()--;
	return REAL_SECOND(6);
}
