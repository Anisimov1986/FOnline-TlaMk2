// FOS Server ArroyoRayders
// Name:   arroyo_rayders
// Author: Sufir
// Uses

// Defines
enum Defines
{
	ArroyoRaidersMsg = 301
}

::array<uint> RaidersCount = { 0 };

void _RaiderInit( ::Critter& raider, bool firstTime)
{
	if(firstTime)
	{
		raider.StatBase[ST_REPLICATION_TIME]=-1;
		raider.StatBase[ST_VAR0]=0; // Id атакуемого игрока.
		// «аписываем группу рейдеров. Ёти данные используютс€ при выходе с карты, дл€ определени€ все-ли рейдеры убиты...
		RaidersCount[0]=RaidersCount[0] + 1;
		::SetAnyData("ArrouoRaidersCount", RaidersCount);
	}
	
	::__EventCritterShow.SubscribeToCritter(@_RaiderSaw,raider);
	::__EventCritterHide.SubscribeToCritter(@_RaiderHide,raider);
	::__EventCritterIdle.SubscribeToCritter( @_RaiderIdle, raider );
	::__EventCritterDead.SubscribeToCritter( @_RaiderDead, raider );
	::__EventCritterMessage.SubscribeToCritter( @_RaiderAlarm, raider );
}

bool _RaiderSaw( ::Critter@ raider, ::Critter@ player)
{

	// ѕровер€ем свободен ли криттер
	if(raider.Stat[ST_VAR0] !=0) return true;
	if(!raider.IsNoPlanes()) NpcPlanes::EraseAttackPlane(raider, player);
	if(!player.IsNotValid && player.IsPlayer() && !raider.IsNotValid)
	{
		raider.StatBase[ST_VAR0]=int(player.Id);
		Messager::CritterSend( raider,ArroyoRayders::Defines::ArroyoRaidersMsg, raider.Stat[ST_VAR0], MESSAGE_TO_WHO_SEES_ME);
		if(NpcPlanes::AddAttackPlane(raider, 0, player))
		{
			if(::Random(0, 8)==0)	raider.SayMsg(SAY_SHOUT_ON_HEAD, TEXTMSG_DLG, DLGSTR(raider.Stat[ST_DIALOG_ID], 0));
			else if(::Random(0, 6)==1) raider.SayMsg(SAY_SHOUT_ON_HEAD, TEXTMSG_DLG, DLGSTR(raider.Stat[ST_DIALOG_ID], 0));
		}
	}
	return true;
}

bool _RaiderHide( ::Critter@ raider, ::Critter@ player )
{
	// ≈сли игрок пропал из пол€ зрени€, убираем план атаки
	if(!player.IsNotValid && player.IsPlayer() && !raider.IsNotValid && raider.Stat[ST_VAR0] !=0)
	{
		if(::Random(0, 10)==0) raider.SayMsg(SAY_SHOUT_ON_HEAD, TEXTMSG_DLG, DLGSTR(raider.Stat[ST_DIALOG_ID], 1));
		NpcPlanes::EraseAttackPlane(raider, player);
		if(raider.IsNoPlanes()) raider.StatBase[ST_VAR0]=0;
	}
	return true;
}

bool _RaiderIdle( ::Critter@ raider )
{
	// »щем игроков и атакуем
	::array<::Critter@> players;
	if(raider.GetCritters(false, FIND_ONLY_PLAYERS|FIND_LIFE_AND_KO, players)>0)
	{
		NpcPlanes::AddAttackPlane(raider, 0, players[0]);
		return false;
	}
	return true;
}

bool _RaiderDead( ::Critter@ raider, ::Critter@ player )
{
	RaidersCount[0]=RaidersCount[0]-1;
	::SetAnyData("ArrouoRaidersCount", RaidersCount);
	return true;
}

bool _RaiderAlarm( ::Critter@ raider, Mk2::MessagePacket@ interMessage )
{
	Messager::Messager@ message = cast<Messager::Messager>(@interMessage);
	if(!valid(message))
		return true;
//void _RaiderAlarm( ::Critter& raider, ::Critter& fromCrit, int message, int value )

	if( message.Message == ArroyoRayders::Defines::ArroyoRaidersMsg && raider.Id != message.SenderId && raider.IsNoPlanes())
	{
		::Critter@ valueCr = ::GetCritter(message.Value);
		if(valid(valueCr) && !valueCr.IsNotValid)
		{
			raider.AddEnemyInStack(message.Value);
			NpcPlanes::AddAttackPlane(raider, 0, valueCr);
		}
	}
	return true;
}