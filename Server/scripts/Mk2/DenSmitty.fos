// FOS Server

enum Define
{
    FDNoMoney                =  5 ,
    FDNoPlaces               =  6 ,
    FDBuySuccessWorkshop    =  7 ,
    FDBuySuccessCarstop     =  8 ,
    FDModifyNOMoney         =  37 ,
    FDModifyNoNeed          =  38 ,
    FDGenericError           =  100 ,
    FDTakeKeyInHand        =  101 ,
    FDCarNotFound           =  102 ,
    FDTakeKeyInHand2       =  103 ,

    EntireWorkShop            =  103 ,

    HighWayman                 =  0 ,
    Faeton                     =  1
}

const uint get_TimeToRespCar()
{
	return REAL_SECOND(10);
}

// проверка: квест уже выполн§ют?
bool r_CheckQuestIsRun( ::Critter& player, ::Critter@ npc, int val )
{
    ::GameVar@ timeout = ::GetGlobalVar( GVAR_den_smitty_car_timeout );
    if( uint( timeout.GetValue() ) > ::__FullSecond )
    {
        timeout = 0;
        return val != 0; // квест выполн§ют
    }
    return val == 0;     // квест не выполн§ют
    /*::GameVar@ game_map=::GetGlobalVar(GVAR_klam_smily_gecko_location);
       ::GameVar@ timeout=::GetGlobalVar(GVAR_klam_smily_gecko_timeout);

       // убиваем карту если квест устарел.
       // ?итата из мануала:
       // "Не рекомендуетс§ выполн§ть какие-либо конкретные действи§ в функции-условии, она дл§ этого не предназначена."
       // Ну да фиг с ним, ничего плохого не должно произойти... (heX посмотрел взгл§дом налево, затем направо, и продолжил писать...)
       if(
            (uint(timeout.GetValue()) > ::__FullSecond) or
            (timeout.GetValue()==0) or
            (game_map.GetValue()==0)
            )
       { // ?сли прошло больше суток но квест невыполнен то
            DeleteGeckoMap(); // удал§ем карту
            for(uint i=0;i<GlobalGroups.length();i++)
            {
                    QuestCompleteNotify(GlobalGroups[i]);
            }
            timeout=0;
       }

       if(game_map.GetValue()==0)
            return val==0; // true
       else
            return val!=0; // false*/
}

uint r_CreateCarProcessFirst( ::Critter& player, ::Critter@ smitty, int CarType )
{
    /*uint16 protoCar;
       uint[] CarInfo(6);

       if(CarType==DenSmitty::Define::HighWayman)
       {
            protoCar=PID_HIGHWAYMAN_FIX1;
            CarInfo[1]=PID_HIGHWAYMAN_FIX1;
       }
       else protoCar=PID_HIGHWAYMAN_FIX1;

       Map@ map=player.GetMap();
       if(not valid(map)) return DenSmitty::Define::FDGenericError;
       CarInfo[5]=map.Id;

       Entire[] entires;
       ParseEntires(map,entires,DenSmitty::Define::EntireWorkShop);

       uint16 entNum;
       for(int i=0,j=entires.length();i<=j;i++)
       {
            if(i==j) return DenSmitty::Define::FDNoPlaces;

            Entire@ ent=entires[i];
            /*if(map.CheckPlaceForCar(ent.HexX,ent.HexY,protoCar))
            {
                    CarInfo[3]=ent.HexX;
                    CarInfo[4]=ent.HexY;
                    entNum=ent.Number;
                    break;
            }
       }

       SetAnyData("CarInfo", CarInfo);

       CreateTimeEvent(::__FullSecond+TimeToRespCar, "e_CreateCar", true);*/

    return 0;
}

uint r_CreateCarProcessNext( ::Critter& player, ::Critter@ smitty, int etap, int carType )
{
    /*uint[] CarInfo(6);
       GetAnyData("CarInfo", CarInfo);

       if(carType==DenSmitty::Define::HighWayman)
            if(etap==2) CarInfo[1]=PID_HIGHWAYMAN_FIX2;
            else if(etap==3) CarInfo[1]=PID_HIGHWAYMAN_FIX3;
                     else
                     {
                            CarInfo[1]=PID_HIGHWAYMAN;
                            ::GameVar@ game_time=::GetGlobalVar(GVAR_den_smitty_car_timeout);
                            game_time=::__FullSecond + (60 * 60);
                     }

       SetAnyData("CarInfo", CarInfo);

       CreateTimeEvent(::__FullSecond+TimeToRespCar, "e_CreateCar", true);*/

    return 0;
}

uint e_CreateCar( uint[] @ value )
{
    /*uint[] CarInfo(6);
       GetAnyData("CarInfo", CarInfo);

       Map@ map=GetMap(CarInfo[5]);

       Item@ oldCar=GetItem(CarInfo[0]);
       if(valid(oldCar)) DeleteItem(oldCar);

       /*if(map.CheckPlaceForCar(CarInfo[3],CarInfo[4],CarInfo[1]))
       {
            Item@ car=map.AddItem(CarInfo[3],CarInfo[4],CarInfo[1],1);
            CarInfo[0]=car.Id;
            SetAnyData("CarInfo", CarInfo);
       }*/
    // else return 1;

    return 0;
}
