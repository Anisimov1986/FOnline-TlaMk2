// FOS Server
// Author: Dagnir, rifleman17
// Cracker: р€д правок.
// ѕо сути скопирован скрипт map_barter_ground.fos
// DenBOS::Defines::MsgCancelPickup

enum Defines
{
	MsgImHaveIllegalItems = 129,
	MsgCancelPickup = 500,
	StrNoIllegalItems = 5200,
	PlaneLoot = 30,
	MessagePleaseKillMeIAmIdiot = 13,
	StrDogSniffedExplosives = 101002
}

CGuardsManagerForDen Guard;	// Ёкземпл€р класса поведени€ охранника

bool CrIsSneak( ::Critter& cr )
{
	return (cr.Mode[MODE_HIDE]!=0 && (cr.IsNpc() || cr.GetAccess()!=ACCESS_ADMIN));
}

void _GuardDogInit(::Critter& cr, bool firstTime)
{
	if(firstTime)
	{
		for(uint i=0;i<=6;i++)
		{
			cr.StatBase[i]=10;
		}
		cr.StatBase[ST_REPLICATION_TIME]=60;
		cr.StatBase[ST_ACTION_POINTS]=::Random(10,16);
		cr.StatBase[ST_ARMOR_CLASS]=::Random(15,30);
		cr.PerkBase[PE_MORE_CRITICALS]=::Random(1,5);
		
		uint16 MaxLife=::Random(120,200);
		cr.StatBase[ST_MAX_LIFE] +=MaxLife;
		cr.StatBase[ST_CURRENT_HP] +=MaxLife;
		
		cr.StatBase[ST_CRITICAL_RESISTANCE]=::Random(30,65);
		cr.StatBase[ST_CRITICAL_RESISTANCE]=85;
		cr.PerkBase[PE_SNIPER]=1;
		cr.PerkBase[PE_SLAYER]=1;
		
		cr.SkillBase[SK_UNARMED]=250;
		cr.ModeBase[MODE_NO_LOOT]=1;
		cr.ModeBase[MODE_NO_DROP]=1;
		cr.ModeBase[MODE_NO_STEAL]=1;
		cr.ModeBase[MODE_NO_PUSH]=1;
		cr.ModeBase[MODE_NO_ENEMY_STACK]=1; 
	}
	cr.StatBase[ST_VAR9]=0;
	
	cr.StatBase[ST_ROLE_CITY]=CITY_ANIMALS_PROTECTED;
	cr.CityRole_IsGuard = true;
	
	cr.SetEvent(CRITTER_EVENT_PLANE_END,"DenBOS::_DogPlaneEnd"); 
	cr.SetEvent(CRITTER_EVENT_SHOW_CRITTER,"DenBOS::_DogSmthCr");
}

int _DogPlaneEnd(::Critter& npc, ::NpcPlane& plane, int reason, ::Critter@ someCr, ::Item@ someItem)
{
	if(plane.Type==AI_PLANE_WALK && plane.Walk_Var0 == AI_PLANE_PROSECUTION && plane.Walk_Var1!=0)
	{
		::Critter@ target = ::GetCritter(plane.Walk_Var1);
		if( validEngineObject( target ) )
		{
			if(npc.Stat[ST_VAR9]>=0 && npc.Stat[ST_VAR9]<80)
			{
				npc.StatBase[ST_VAR9]+=1;
				npc.Say(SAY_SHOUT_ON_HEAD,"“€вкает");
			}
			else if(npc.Stat[ST_VAR9]>=80 && npc.Stat[ST_VAR9]<150)
			{
				npc.StatBase[ST_VAR9]+=1;
				npc.Say(SAY_SHOUT_ON_HEAD,"Rrrrrrr");
			}
			else
			{
				NpcPlanes::AddAttackPlane(npc,0,target,true);
				npc.StatBase[ST_VAR9]=0;
				return PLANE_DISCARD;
			}
			if(::GetLocalVar(LVAR_safe_zone_entered_den,plane.Walk_Var1).GetValue()!=0) 
				target.SendMessage(DenBOS::Defines::MessagePleaseKillMeIAmIdiot,plane.Walk_Var1, MESSAGE_TO_WHO_SEES_ME);
		}
	}
	return PLANE_RUN_GLOBAL;
}

bool SearchInvenTnt(::Critter& cr)
{
	if( cr.IsPlayer() )
	{
		if( valid( cr.GetItem( uint(Content::Item::ACTIVE_MINE ) , ( -1 ) ) ) ) return true;
		if( valid( cr.GetItem( uint(Content::Item::ACTIVE_PLASTIC_EXPLOSIVE ) , ( -1 ) ) ) ) return true;
		if( valid( cr.GetItem( uint(Content::Item::ACTIVE_DYNAMITE ) , ( -1 ) ) ) ) return true;
		::array<::Item@> conts = {};
		for(uint n=0, nEnd = cr.GetItemsByType(ITEM_TYPE_CONTAINER, conts); n<nEnd; n++)
		{
			if( valid( conts[n].GetItem( uint(Content::Item::ACTIVE_MINE ) , uint( -1 ) ) ) ) return true;
			if( valid( conts[n].GetItem( uint(Content::Item::ACTIVE_PLASTIC_EXPLOSIVE ) , uint( -1 ) ) ) ) return true;
			if( valid( conts[n].GetItem( uint(Content::Item::ACTIVE_DYNAMITE ) , uint( -1 ) ) ) ) return true;
		}
	}
	return false;
}

void _DogSmthCr(::Critter& cr, ::Critter& showCr)
{
	if( SearchInvenTnt( showCr ) && not CrIsSneak( showCr ) && cr.IsNoPlanes() ) 
	{
		cr.Say( SAY_SHOUT_ON_HEAD, "“€вкает" );
		if( showCr.IsPlayer( ) && showCr.IsLife( ) ) 
			showCr.SayMsg( SAY_NETMSG, TEXTMSG_TEXT,  DenBOS::Defines::StrDogSniffedExplosives ); 
		
		NpcPlanes::AddProsecutionPlane( cr, showCr, 0, true );
		if( ::GetLocalVar( LVAR_safe_zone_entered_den, showCr.Id ) != 0 ) 
			showCr.SendMessage( DenBOS::Defines::MessagePleaseKillMeIAmIdiot, showCr.Id, MESSAGE_TO_WHO_SEES_ME );
	}
	else if( CrIsSneak( showCr ) )
		NpcPlanes::AddAttackPlane( cr, 0, showCr, showCr.Stat[ ST_CURRENT_HP ] - 1 , true );
}

void _PatrolDenInit( ::Critter& cr, bool firstTime )
{
	if(firstTime)
	{
		for( uint i = 0; i <= 6; i++ )
			cr.StatBase[ i ] = 10;
			
		cr.StatBase[ ST_REPLICATION_TIME ] = 60;
		cr.StatBase[ ST_ACTION_POINTS ] = ::Random( 10, 16 );
		cr.StatBase[ ST_ARMOR_CLASS ] = ::Random( 25, 40 );
		cr.PerkBase[ PE_MORE_CRITICALS ] = ::Random( 1, 5 );
		
		{
			const uint16 MaxLife = ::Random( 170,300 );
			cr.StatBase[ST_MAX_LIFE] +=MaxLife;
			cr.StatBase[ST_CURRENT_HP] +=MaxLife;
		}
		
		cr.StatBase[ ST_CRITICAL_RESISTANCE ] = 85;
		cr.PerkBase[ PE_SNIPER ] = 1;
		cr.PerkBase[ PE_SLAYER ] = 1;
		
	//ToDo: —делать специализации на навык по которым будет выдавать инвентарь.
	
		cr.SkillBase[ SK_SMALL_GUNS ] = 250;
		cr.SkillBase[ SK_BIG_GUNS ] = 250;
		cr.SkillBase[ SK_UNARMED ] = 250;
		cr.SkillBase[ SK_ENERGY_WEAPONS ] = 250;
		cr.ModeBase[ MODE_NO_LOOT ] = 1;
		cr.ModeBase[ MODE_NO_DROP ] = 1;
		cr.ModeBase[ MODE_NO_STEAL ] = 1;
		cr.ModeBase[ MODE_NO_PUSH ] = 1;
		cr.ModeBase[ MODE_NO_ENEMY_STACK ] = 1;
		cr.ModeBase[ MODE_UNLIMITED_AMMO ] = 1;	
	}
	cr.CityRole_IsGuard = true;
	
	cr.SetEvent( CRITTER_EVENT_MESSAGE, "CityGuard::_GuardMessage" );
}

void _DenGuardRndPhrase(::Critter& cr)
{
	if(::Random(1,60)==1) cr.SayMsg(SAY_NORM_ON_HEAD, TEXTMSG_TEXT, 1055);
	else if(::Random(1,80)==1) cr.SayMsg(SAY_EMOTE_ON_HEAD, TEXTMSG_TEXT, 1056);
}


void _GuardInit( ::Critter& cr, bool firstTime )
{
	_EventGumanoidGuardInit( cr, firstTime );
	cr.StatBase[ ST_ROLE_CITY ] = CITY_DEN_GUARD;
	if( firstTime )
	{
		for( uint resist = ST_NORMAL_RESIST; resist <= ST_ELECTRO_RESIST; resist++ )
			cr.StatBase[ resist ] = 40;
			
		for( uint absorb = ST_NORMAL_ABSORB; absorb <= ST_ELECTRO_ABSORB; absorb++ )
			cr.StatBase[ absorb ] = 5;
		
		cr.StatBase[ ST_REPLICATION_TIME ] = 60;
		cr.StatBase[ ST_ACTION_POINTS ] = 16;
		cr.StatBase[ ST_ARMOR_CLASS ] = 35;
		cr.PerkBase[ PE_MORE_CRITICALS ] = 18;
		cr.StatBase[ ST_BONUS_LOOK ] = 60;
		
		{
			const uint16 MaxLife = ::Random( 250, 400 );
			cr.StatBase[ ST_MAX_LIFE ] += MaxLife;
			cr.StatBase[ ST_CURRENT_HP ] += MaxLife;
		}
		
		cr.StatBase[ ST_CRITICAL_RESISTANCE ] = 80;
		cr.SkillBase[ SK_SMALL_GUNS ] = 250;
		cr.SkillBase[ SK_BIG_GUNS ] = 250;
		cr.SkillBase[ SK_UNARMED ] = 250;
		cr.SkillBase[ SK_ENERGY_WEAPONS ] = 250;
		cr.ModeBase[ MODE_NO_LOOT ] = 1;
		cr.ModeBase[ MODE_NO_DROP ] = 1;
		cr.ModeBase[ MODE_NO_STEAL ] = 1;
		cr.ModeBase[ MODE_NO_PUSH ] = 1;
		cr.ModeBase[ MODE_NO_ENEMY_STACK ] = 1; 
		cr.ModeBase[ MODE_UNLIMITED_AMMO ] = 1;
	}
	cr.CityRole_IsGuard = true;
	
	cr.SetEvent( CRITTER_EVENT_SMTH_DROP_ITEM, "DenBOS::_GuardSmthDropItem" );
	cr.SetEvent( CRITTER_EVENT_PLANE_END, "DenBOS::_NpcPlaneEnd" );
	//cr.SetEvent( CRITTER_EVENT_SMTH_MOVE_ITEM, "DenBOS::_SmthItemMove" );  
	cr.SetEvent( CRITTER_EVENT_SHOW_CRITTER, "DenBOS::_SmthCr" );
	cr.SetEvent(CRITTER_EVENT_IDLE, "DenBOS::_DenGuardRndPhrase");
	
	::__EventCritterSmthMoveItem.SubscribeToCritter( @SmthItemMove, cr );
}

// ЧЭљЯУї€
void _EventGumanoidGuardInit( ::Critter& npc, bool firstTime)
{
	npc.SetEvent(CRITTER_EVENT_MESSAGE,"DenBOS::ce_GuardOnMessage");		// Цеакци§ на полученное сообщение
	npc.CityRole_IsGuard = true;
}

// Эхранник гуманоид получил сообщение
void ce_GuardOnMessage( ::Critter& crit, ::Critter& fromCrit, int message, int value)
{
	Guard.EventOnMessageToGumanoidGuards(crit, fromCrit, message, fromCrit.Id);
}

void _NCRPolicemanInit( ::Critter& cr, bool firstTime )
{	
	for(int resist=ST_NORMAL_RESIST; resist<=ST_ELECTRO_RESIST; resist++)
		cr.StatBase[resist]=40;
	for(int absorb=ST_NORMAL_ABSORB; absorb<=ST_ELECTRO_ABSORB; absorb++)
		cr.StatBase[absorb]=5;
		
	cr.StatBase[ST_EMP_ABSORB]=500;
	cr.StatBase[ST_EXPLODE_RESIST]=60;
	
	cr.StatBase[ST_ROLE_CITY]=CITY_WTF_GUARD; // wtf?
	//cr.StatBase[ST_ROLE_CITY]=CITY_DEN_GUARD;
	cr.StatBase[ST_REPLICATION_TIME]=35;
	cr.StatBase[ST_ACTION_POINTS]=16;
	cr.StatBase[ST_ARMOR_CLASS]=50;
    cr.StatBase[ST_BONUS_LOOK]=60;
	cr.StatBase[ST_MAX_LIFE]=527;
	cr.StatBase[ST_CURRENT_HP]=590;
	cr.PerkBase[PE_BONUS_RANGED_DAMAGE]=39;
	cr.PerkBase[PE_MORE_CRITICALS]=21;
	cr.StatBase[ST_CRITICAL_RESISTANCE]=70;
	cr.SkillBase[SK_SMALL_GUNS]=290;
	cr.SkillBase[SK_UNARMED]=250;
	cr.ModeBase[MODE_NO_STEAL]=1;
	cr.ModeBase[MODE_NO_PUSH]=1;
	cr.ModeBase[MODE_NO_ENEMY_STACK]=1;
	cr.CityRole_IsGuard = true;
	
	cr.SetEvent(CRITTER_EVENT_MESSAGE,"CityGuard::_GuardMessage");
	cr.SetEvent(CRITTER_EVENT_PLANE_END,"DenBOS::_NpcPlaneEnd");
	cr.SetEvent(CRITTER_EVENT_SMTH_MOVE_ITEM,"DenBOS::_SmthItemMoveNCR");  
	cr.SetEvent(CRITTER_EVENT_SHOW_CRITTER,"DenBOS::_SmthCrNCR");
}

void _SmthCrNCR(::Critter& cr, ::Critter& showCr)
{
	::Item@ item=_CritGetItemHand(showCr);
	if (!validEngineObject(item)) return;
	if(item.GetType()==ITEM_TYPE_WEAPON && _WeaponSkill(item.Proto,item.Mode)!=SK_UNARMED && !cr.IsDead()
		&& showCr.Stat[ST_ROLE_CITY]!=CITY_WTF_GUARD)
	{
		if ((::GetLocalVar(LVAR_safe_zone_entered_den,showCr.Id)).GetValue()==1)
		{			
			::NpcPlane@ plane=::CreatePlane();
			plane.Type=AI_PLANE_ATTACK;
			plane.Priority=AI_PLANE_ATTACK_PRIORITY;
			plane.Attack_TargId=showCr.Id;
			plane.Attack_MinHp=::__DeadHitPoints;
			plane.Attack_IsGag=false;
			plane.Attack_GagHexX=0;
			plane.Attack_GagHexY=0;
			plane.Attack_LastHexY=showCr.HexY;
			plane.Attack_LastHexX=showCr.HexX;
			plane.Run=true;
			cr.AddPlane(plane);
			if(::Random(0,20)>5) cr.SayMsg(SAY_SHOUT_ON_HEAD, TEXTMSG_DLG, DLGSTR(cr.Stat[ST_DIALOG_ID], 3));// “ут нпц может что-то сказать.
		}
	}
}

void _SmthCr(::Critter& cr, ::Critter& showCr)
{
	if( showCr.IsDead( ) ) 
		return;
		
	::Map@ map = cr.GetMap();
	if( !validEngineObject(map))
		return;
		
	if( CityGuard::GetPenaltyCity( showCr, map.GetLocation().GetProtoId() ) > City::Penalty::CheckBorderKill && ( ::GetLocalVar( LVAR_safe_zone_entered_den, showCr.Id ) ).GetValue( ) == 1 ) 
	{
		::NpcPlane@ plane = ::CreatePlane( );
		plane.Type = AI_PLANE_ATTACK;
		plane.Priority = AI_PLANE_ATTACK_PRIORITY;
		plane.Attack_TargId = showCr.Id;
		plane.Attack_MinHp = ::__DeadHitPoints;
		plane.Attack_IsGag = false;
		plane.Attack_GagHexX = 0;
		plane.Attack_GagHexY = 0;
		plane.Attack_LastHexY = showCr.HexY;
		plane.Attack_LastHexX = showCr.HexX;
		plane.Run = true;
		cr.AddPlane( plane );
	}
	::Item@ item = _CritGetItemHand( showCr );
	if ( ! validEngineObject( item ) ) 
		return;
	
	if( item.GetType( ) == ITEM_TYPE_WEAPON && _WeaponSkill( item.Proto, item.Mode ) != SK_UNARMED && !cr.IsDead( ) )
	{
		if ( ( ::GetLocalVar( LVAR_safe_zone_entered_den, showCr.Id ) ).GetValue( ) == 1 )
		{
			::NpcPlane@ plane = ::CreatePlane( );
			plane.Type = AI_PLANE_ATTACK;
			plane.Priority = AI_PLANE_ATTACK_PRIORITY;
			plane.Attack_TargId = showCr.Id;
			plane.Attack_MinHp = ::__DeadHitPoints;
			plane.Attack_IsGag = false;
			plane.Attack_GagHexX = 0;
			plane.Attack_GagHexY = 0;
			plane.Attack_LastHexY = showCr.HexY;
			plane.Attack_LastHexX = showCr.HexX;
			plane.Run = true;
			cr.AddPlane( plane );
			if( ::Random( 0, 20 ) > 5 ) cr.SayMsg( SAY_SHOUT_ON_HEAD, TEXTMSG_DLG, DLGSTR( cr.Stat[ ST_DIALOG_ID ], 3) );// “ут нпц может что-то сказать.
		}
	}
}

void _SmthItemMoveNCR(::Critter& gd, ::Critter& cr, ::Item& item, uint8 fromSlot)
{
	uint8 toSlot=item.CritSlot;
	if(item.GetType()==ITEM_TYPE_WEAPON && ( toSlot==SLOT_HAND1  || toSlot == SLOT_BONUS ) && _WeaponSkill(item.Proto,item.Mode)!=SK_UNARMED && !gd.IsDead()
		&& ::GetDistantion(gd.HexX, gd.HexY, cr.HexX, cr.HexY)<=30
		&& cr.Stat[ST_ROLE_CITY]!=CITY_WTF_GUARD)
		{
			if ((::GetLocalVar(LVAR_safe_zone_entered_den,cr.Id)).GetValue()==1)
			{	
				::NpcPlane@ plane=::CreatePlane();
				plane.Type=AI_PLANE_ATTACK;
				plane.Priority=AI_PLANE_ATTACK_PRIORITY;
				plane.Attack_TargId=cr.Id;
				plane.Attack_MinHp=::__DeadHitPoints;
				plane.Attack_IsGag=false;
				plane.Attack_GagHexX=0;
				plane.Attack_GagHexY=0;
				plane.Attack_LastHexY=cr.HexY;
				plane.Attack_LastHexX=cr.HexX;
				plane.Run=true;
				gd.AddPlane(plane);
				gd.SayMsg(SAY_SHOUT_ON_HEAD, TEXTMSG_DLG, DLGSTR(gd.Stat[ST_DIALOG_ID], 3));// “ут нпц может что-то сказать.
			}
		}
}

bool SmthItemMove(::Critter@ guard, ::Critter@ critter, ::Item@ item, uint8 fromSlot)
{
	uint8 toSlot = item.CritSlot;
	if(item.GetType()==ITEM_TYPE_WEAPON && ( toSlot==SLOT_HAND1 || toSlot == SLOT_BONUS ) && _WeaponSkill(item.Proto,item.Mode)!=SK_UNARMED && !guard.IsDead()
		&& ::GetDistantion(guard.HexX, guard.HexY, critter.HexX, critter.HexY)<=30)
	{
		if ((::GetLocalVar(LVAR_safe_zone_entered_den,critter.Id)).GetValue()==1)
		{
			::NpcPlane@ plane=::CreatePlane();
			plane.Type=AI_PLANE_ATTACK;
			plane.Priority=AI_PLANE_ATTACK_PRIORITY;
			plane.Attack_TargId=critter.Id;
			plane.Attack_MinHp=::__DeadHitPoints;
			plane.Attack_IsGag=false;
			plane.Attack_GagHexX=0;
			plane.Attack_GagHexY=0;
			plane.Attack_LastHexY=critter.HexY;
			plane.Attack_LastHexX=critter.HexX;
			plane.Run=true;
			guard.AddPlane(plane);
			guard.SayMsg(SAY_SHOUT_ON_HEAD, TEXTMSG_DLG, DLGSTR(guard.Stat[ST_DIALOG_ID], 3));// “ут нпц может что-то сказать.
		}
	}
	return true;
}

void _SmthItemMove(::Critter& gd, ::Critter& cr, ::Item& item, uint8 fromSlot)
{
	uint8 toSlot=item.CritSlot;
	if(item.GetType()==ITEM_TYPE_WEAPON && ( toSlot==SLOT_HAND1 || toSlot == SLOT_BONUS ) && _WeaponSkill(item.Proto,item.Mode)!=SK_UNARMED && !gd.IsDead()
		&& ::GetDistantion(gd.HexX, gd.HexY, cr.HexX, cr.HexY)<=30)
	{
		if ((::GetLocalVar(LVAR_safe_zone_entered_den,cr.Id)).GetValue()==1)
		{
			::NpcPlane@ plane=::CreatePlane();
			plane.Type=AI_PLANE_ATTACK;
			plane.Priority=AI_PLANE_ATTACK_PRIORITY;
			plane.Attack_TargId=cr.Id;
			plane.Attack_MinHp=::__DeadHitPoints;
			plane.Attack_IsGag=false;
			plane.Attack_GagHexX=0;
			plane.Attack_GagHexY=0;
			plane.Attack_LastHexY=cr.HexY;
			plane.Attack_LastHexX=cr.HexX;
			plane.Run=true;
			gd.AddPlane(plane);
			gd.SayMsg(SAY_SHOUT_ON_HEAD, TEXTMSG_DLG, DLGSTR(gd.Stat[ST_DIALOG_ID], 3));// “ут нпц может что-то сказать.
		}
	}
}

void _GuardSmthDropItem(::Critter& npc, ::Critter& fromCr, ::Item& item)
{
	if (!npc.IsLife()) return;
	if(fromCr.IsPlayer()&&npc.IsLife())
	{
		uint pid=item.GetProtoId();
		if(pid== uint( Content::Item::ACTIVE_PLASTIC_EXPLOSIVE ) ||pid== uint( Content::Item::ACTIVE_MINE ) ||pid== uint( Content::Item::ACTIVE_DYNAMITE ) )
		{
			CityGuard::AttackCityPlane(npc,fromCr);
		}
	}
	if (!CheckItemIsIllegal(item)) return;
	if(::GetDistantion(npc.HexX, npc.HexY, fromCr.HexX, fromCr.HexY)<=35) NpcPlanes::AddPickPlane(npc, AI_PLANE_ATTACK_PRIORITY, item, 0, true);	
}

void _NpcSmthDeadNCR(::Critter& npc, ::Critter& fromCrit, ::Critter@ killer)
{
	if(_CritCanDropItemsOnDead(fromCrit) && ::GetDistantion(npc.HexX, npc.HexY, fromCrit.HexX, fromCrit.HexY)<=35)
		NpcPlanes::AddWalkPlane(npc,0,DenBOS::Defines::PlaneLoot,fromCrit.Id,fromCrit.HexX,fromCrit.HexY,6,true,1);
}
// NpcPlanes::
// Illegal items list and checks

bool HasIllegalItems(::Critter & cr)
{
	::array<::Item@> items = {};
	for(uint i=0, iMax=cr.GetItems(-1, items); i<iMax; i++)
		if(CheckItemIsIllegal(items[i])) 
			return true;		
	return false;
}

const ::array<uint16> Pids_IllegalItems={Content::Item::ACTIVE_DYNAMITE, Content::Item::ACTIVE_PLASTIC_EXPLOSIVE, Content::Item::ACTIVE_MINE, Content::Item::TOGGLE_SWITCH};

bool CheckItemIsIllegal(::Item @ item)
{
	if (!validEngineObject(item)) return false;
	return ( -1 != Pids_IllegalItems.find( item.GetProtoId() ) );
}

int _NpcPlaneEnd(::Critter& npc, ::NpcPlane& plane, int reason, ::Critter@ someCr, ::Item@ someItem)
{
	if(plane.Identifier==DenBOS::Defines::PlaneLoot && reason==REASON_SUCCESS)
	{
		::Critter@ cr=::GetCritter(plane.IdentifierExt);
		if(validEngineObject(cr) && cr.IsDead())
		{
			::array<::Item@> items;
			cr.GetItems(SLOT_INV,items);
			cr.GetItems(SLOT_HAND1,items);
			cr.GetItems(SLOT_HAND2,items);
			npc.GetMap().GetItems(cr.HexX,cr.HexY,items);

			for(uint i=0, iMax=items.length(); i<iMax;i++)
			{
				int type=items[i].GetType();
				if(type<ITEM_TYPE_ARMOR || type>ITEM_TYPE_KEY) @items[i]=null;
			}
			::MoveItems(items,npc);
			npc.SendMessage(DenBOS::Defines::MsgCancelPickup, plane.IdentifierExt, MESSAGE_TO_ALL_ON_MAP);
			_CritAnimatePickup(npc);
			npc.Wait(::__Breaktime);
		}
		return PLANE_DISCARD; // Skip global and end plane
	}
	return PLANE_RUN_GLOBAL; // Run global
}
void t_Enter(::Critter& cr, ::Scenery& trigger, bool entered, uint8 dir)
{
	::Map@ map=cr.GetMap();
	if (!validEngineObject(map)) return;
	if(cr.IsNpc()) return;
	::Item@ item=_CritGetItemHand(cr);
	::Item@ bonus=_CritGetItemBonus(cr);
	bool isWarning = false;
	if(validEngineObject(item))
	{
		//cr.Say(SAY_NETMSG,"Type "+item.GetType()+" Skill "+_WeaponSkill(item.Proto,item.Mode)+" Penalty "+CityGuard::GetPenaltyCity(cr));
		if((item.GetType()==ITEM_TYPE_WEAPON && _WeaponSkill(item.Proto,item.Mode)!=SK_UNARMED) || CityGuard::GetPenaltyCity(cr, map.GetLocation().GetProtoId())> City::Penalty::CheckBorderKill )
			isWarning = true;
	}
	if(!isWarning)
	{
		if(valid(bonus))
		{
			//cr.Say(SAY_NETMSG,"Type "+item.GetType()+" Skill "+_WeaponSkill(item.Proto,item.Mode)+" Penalty "+CityGuard::GetPenaltyCity(cr));
			if((bonus.GetType()==ITEM_TYPE_WEAPON && _WeaponSkill(bonus.Proto,bonus.Mode)!=SK_UNARMED) || CityGuard::GetPenaltyCity(cr,map.GetLocation().GetProtoId())> City::Penalty::CheckBorderKill )
				isWarning = true;
		}
	}
	if(isWarning)
	{
		//cr.Say(SAY_NETMSG," ¬ас будут бить. ");
		::array<::Critter@> critters;
		if(map.GetCrittersHex(cr.HexX,cr.HexY,30,FIND_LIFE_AND_KO|FIND_ONLY_NPC,critters)!=0)
		{
			::NpcPlane@ plane=::CreatePlane();
			plane.Type=AI_PLANE_ATTACK;
			plane.Priority=AI_PLANE_ATTACK_PRIORITY;
			plane.Attack_TargId=cr.Id;
			plane.Attack_MinHp=::__DeadHitPoints;
			plane.Attack_IsGag=false;
			plane.Attack_GagHexX=0;
			plane.Attack_GagHexY=0;
			plane.Attack_LastHexY=cr.HexY;
			plane.Attack_LastHexX=cr.HexX;
			plane.Run=true;
			for(uint i=0, iMax=critters.length(); i<iMax; i++) 
			{
				if(critters[i].StatBase[ST_NPC_ROLE]==55 || critters[i].StatBase[ST_NPC_ROLE]==155) 
				{
					critters[i].AddPlane(plane);
				}
			}
		}
	}
	::GameVar@ var=::GetLocalVar(LVAR_safe_zone_entered_den, cr.Id);
	if(valid(var))
		var=1;
}

void t_Leave(::Critter& player, ::Scenery& trigger, bool entered, uint8 dir)
{
	if(player.IsNpc()) return;
	::GameVar@ var=::GetLocalVar(LVAR_safe_zone_entered_den, player.Id);
	if(valid(var))
		var=0;
}

void t_Warn(::Critter& cr, ::Scenery& trigger, bool entered, uint8 dir, int npcRole)
{
	if(cr.IsNpc()) return;
	::Map@ map=cr.GetMap();
	if (!validEngineObject(map)) return;
	::Item@ item=_CritGetItemHand(cr);
	::Item@ bonus=_CritGetItemBonus(cr);
	bool isWarning = false;
	if(validEngineObject(item))
	{
		//cr.Say(SAY_NETMSG,"Type "+item.GetType()+" Skill "+_WeaponSkill(item.Proto,item.Mode)+" Penalty "+CityGuard::GetPenaltyCity(cr));
		if((item.GetType()==ITEM_TYPE_WEAPON && _WeaponSkill(item.Proto,item.Mode)!=SK_UNARMED) || CityGuard::GetPenaltyCity(cr,map.GetLocation().GetProtoId())> City::Penalty::CheckBorderKill )
			isWarning = true;
	}
	if(!isWarning)
	{
		if(validEngineObject(bonus))
		{
			//cr.Say(SAY_NETMSG,"Type "+item.GetType()+" Skill "+_WeaponSkill(item.Proto,item.Mode)+" Penalty "+CityGuard::GetPenaltyCity(cr));
			if((bonus.GetType()==ITEM_TYPE_WEAPON && _WeaponSkill(bonus.Proto,bonus.Mode)!=SK_UNARMED) || CityGuard::GetPenaltyCity(cr,map.GetLocation().GetProtoId())> City::Penalty::CheckBorderKill )
				isWarning = true;
		}
	}
	if(isWarning)
	{
		//cr.Say(SAY_NETMSG," ¬ас могут бить. ");
		cr.Wait(0);
		::array<::Critter@> critters;
		if(map.GetCrittersHex(cr.HexX,cr.HexY,	//»щем нпц в пределах видимости игрока, иначе нету смысла что-то говорить
			cr.Stat[ST_VISIBLE_DIST],FIND_LIFE|FIND_ONLY_NPC,critters)!=0)
		{
			for(uint i=0, iMax=critters.length(); i<iMax;i++) 
			{
				if(critters[i].Stat[ST_NPC_ROLE]==55 || critters[i].Stat[ST_NPC_ROLE]==155) 
				{
					//Log( "√оворить " + critters[i].Stat[ST_DIALOG_ID] + " " + DLGSTR(critters[i].Stat[ST_DIALOG_ID], 1) );
					//cr.Say(SAY_NETMSG," ¬ас могут бить. ");
					critters[i].SayMsg(SAY_SHOUT_ON_HEAD, TEXTMSG_DLG, DLGSTR(critters[i].Stat[ST_DIALOG_ID], 1));
					return;	// √оворить будет только один нпц.
				}
			}
		}
	}
}

void _DenInCritterMap(::Map& den, ::Critter& cr)
{
	if(cr.IsNpc()) return; //TabaK. Ќефиг разговаривать с Ќѕ÷.
	::array<::Critter@> critters;
	if(den.GetCrittersHex(cr.HexX,cr.HexY,	//»щем нпц в пределах видимости игрока, иначе нету смысла что-то говорить
		cr.Stat[ST_VISIBLE_DIST],FIND_LIFE|FIND_ONLY_NPC,critters)!=0)
	{
		for(uint i=0, iMax=critters.length(); i<iMax;i++) 
		{
			if(critters[i].Stat[ST_NPC_ROLE]==55 || critters[i].Stat[ST_NPC_ROLE]==155) 
			{
				::array<uint> EventValues={cr.Id,critters[i].Id};
				::CreateTimeEvent(::__FullSecond+50,"DenBOS::e_Message",EventValues,false);
				break;	// √оворить будет только один нпц.
			}
		}
	}
}
// cr.Stat[ST_VISIBLE_DIST]
uint e_Message(uint[]@ values)
{
	::Critter@ guard=::GetCritter(values[1]);
	::Critter@ guest=::GetCritter(values[0]);
	if(!validEngineObject(guard) || !validEngineObject(guest)) return 0;
	::Map@ map = guard.GetMap();
	if(!validEngineObject(map))
		return 0;
		
	bool KillerCr=CityGuard::GetPenaltyCity(guest,map.GetLocation().GetProtoId())>5;
	guard.SayMsg(SAY_SHOUT_ON_HEAD, TEXTMSG_DLG, DLGSTR(guard.Stat[ST_DIALOG_ID], KillerCr?0:2));
	return 0;
}

// —ообщени€
void _GuardOnMessage(::Critter& cr, ::Critter& fromCrit, int message, int value)
{
	if(message==DenBOS::Defines::MessagePleaseKillMeIAmIdiot)
		{
			::NpcPlane@ plane=::CreatePlane();
			plane.Type=AI_PLANE_ATTACK;
			plane.Priority=AI_PLANE_ATTACK_PRIORITY;
			plane.Attack_TargId=fromCrit.Id;
			plane.Attack_MinHp=::__DeadHitPoints;
			plane.Attack_IsGag=false;
			plane.Attack_GagHexX=0;
			plane.Attack_GagHexY=0;
			plane.Attack_LastHexY=fromCrit.HexY;
			plane.Attack_LastHexX=fromCrit.HexX;
			plane.Run=true;
			cr.AddPlane(plane);
			if(::Random(0,20)>5) cr.SayMsg(SAY_SHOUT_ON_HEAD, TEXTMSG_DLG, DLGSTR(cr.Stat[ST_DIALOG_ID], 3));// “ут нпц может что-то сказать.
		}
}

// Ќаследуем класс поведени€ охранника
class CGuardsManagerForDen : Guards::CGuards
{
	CGuardsManagerForDen()
	{
		super();
		//Dialog=198;
		SaveZoneGameVar=LVAR_safe_zone_entered_den;
	}
}

void _DenKillCritterMap(::Map& map, ::Critter& cr, ::Critter@ killer)
{
	::array<::Critter@> critters;
	if(map.GetCrittersHex(cr.HexX,cr.HexY,
		cr.Stat[ST_VISIBLE_DIST],FIND_LIFE|FIND_ONLY_NPC,critters)!=0)
	{
		//AddPenaltyCity(killer,1);
	}
}
