// FOS Server Client


void ModuleInit()
{
#ifdef __SERVER
	::__EventCritterInit.Subscribe(@CritterInit);
	::__EventCritterFinish.Subscribe(@CritterFinish);
#endif
#ifdef __CLIENT
	::__EventRenderIface.Subscribe(@Render);
#endif
}

#ifdef __SERVER

::array< uint > PlayersOnline;

void EraseOnlinePlayer( uint id )
{
    int indexPlayer = PlayersOnline.find( id );
    if( indexPlayer != -1 )
        PlayersOnline.removeAt( indexPlayer );
}

bool CritterFinish( ::Critter@ cr, bool )
{
	if(cr.IsPlayer())
	{		
		EraseOnlinePlayer( cr.Id );
	}
	return true;
}

void SayToAllPlayers( uint16 textMsg, uint strNum, ::string@ lexems )
{
    for( uint n = 0, iMax = PlayersOnline.length(); n < iMax; n++ )
    {
        ::Critter@ cr = ::GetCritter( PlayersOnline[ n ] );
        if( validEngineObject( cr ) )
        {
            if( @lexems !is null )
                cr.SayMsg( SAY_NETMSG, textMsg, strNum, lexems );
            else
                cr.SayMsg( SAY_NETMSG, textMsg, strNum );
        }
    }
}

uint cte_ShowOnline( ::Critter& cr, int identifier, int& rate, int& )
{
    cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, 271, "$online" + PlayersOnline.length() );
    return 0;
}

bool CritterInit( ::Critter@ cr, bool )
{
	if(cr.IsPlayer())
	{		
		// Show online. TabaK. validEngineObject
		PlayersOnline.insertLast( cr.Id );
        cr.AddTimeEvent( "ListingPlayers::cte_ShowOnline", 1, CTE_MESSAGE_DELAY );
	}
	return true;
}

#endif


void SetMessage( 
#ifdef __SERVER
				::Critter& cr, 
#endif	
				int, int, int, ::string@ param3, ::array< int >@ )
{
    ServerMessage = param3;
}

void set_ServerMessage( ::string& value )
{
	::__ServerMessage = value;

#ifdef __SERVER
	for( uint i = 0, iMax = PlayersOnline.length(); i < iMax; i++ )
	{
		::Critter@ plr = ::GetCritter( PlayersOnline[ i ] );
		if( validEngineObject( plr ) )
			plr.RunClientScript( "Mk2@ListingPlayers::SetMessage", 0, 0, 0, @::__ServerMessage, null );
	}
#endif
#ifdef __CLIENT
	//::Message( "TicTac" );
	if( ::__ServerMessage.length() > 3 )
	{
		message_tick = ::GetTick();
		message_enabled = true;
		::Message( "|" + COLOR_DRED + " [Server]: |" + COLOR_WHITE + " " + ::__ServerMessage );
	}
	else
	{
		message_tick = 0;
		message_enabled = false;
	}
#endif
}

::string@ get_ServerMessage()
{
	return @::__ServerMessage;
}

#ifdef __CLIENT

uint message_tick = 0;
bool message_enabled = false;

bool Render( uint layer )
{
	if( layer == 3  && GUI_GetActiveMainScreen() != CLIENT_MAIN_SCREEN_LOGIN && message_enabled )
	{
		::DrawText( ::__ServerMessage, ::__ScreenWidth / 2 - 50, -200, 300, ::__ScreenHeight, COLOR_RGB( 255, 0, 0 ), FONT_FAT, FT_CENTERY );
		if( ::GetTick() - message_tick > 20000 )
		{
			::__ServerMessage = "";
			message_enabled = false;
		}
	}
	return true;
}
#endif