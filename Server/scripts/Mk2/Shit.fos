// FOS Server
// shit

#define MO				(102000)	// Moo...
#define SHIT_COMPLIT	(100031)	//Вы убрали дерьмо. Уже хватит.

void Brahmin(::Critter& cr, bool firstTime)
{
	ProcessingRoleCity::_TemplateAnimalInit(cr,firstTime);
	cr.SetEvent(CRITTER_EVENT_IDLE, "Shit::BrahminIdle");
}

void BrahminIdle(::Critter& cr)
{
	if(cr.IsLife()) SpawnShit(cr);
}

void Shovel(::Item& item, bool firstTime)
{
	item.SetEvent(ITEM_EVENT_USE ,"Shit::ShovelUse");  
} 

bool ShovelUse(::Item& item, ::Critter& crit, ::Critter@ onCritter, ::Item@ onItem, ::Scenery@ onScenery)
{
	if(!validEngineObject(onItem)) return false;
	if(onItem.GetProtoId() !=Content::Item::SHIT) return false;
	::GameVar@ status=::GetLocalVar(LVAR_newbie_shit, crit.Id);
	if(!valid(status)) return false;
	if(status.GetValue()!=1) return false;	
	::GameVar@ count=::GetLocalVar(LVAR_newbie_shit_shoveling, crit.Id);
	if (!valid(count)) return false;
	if(count.GetValue()<20)	count +=1;
	else return false;
	int shitleft=(10-count.GetValue());
	if(shitleft>0)	crit.SayMsg( SAY_NETMSG,TEXTMSG_TEXT, SHIT_COMPLIT + 1, "$count" + shitleft );
	else crit.SayMsg(SAY_NETMSG,TEXTMSG_TEXT,SHIT_COMPLIT);
	::DeleteItem (onItem);
	return true;
}

void SpawnShit(::Critter& cr)
{	
	if(cr.Timeout[TO_SK_REPAIR]>0 || ::Random(0,3)!=2) return; // не гадим очень часто
	::Map@ map=cr.GetMap();
	if(!validEngineObject(map)) return;
	if(map.GetItems (Content::Item::SHIT,null)>30) return;
	cr.SayMsg(SAY_EMOTE_ON_HEAD,TEXTMSG_TEXT,MO);
	map.AddItem(cr.HexX,cr.HexY,Content::Item::SHIT,1);
	cr.MoveRandom (); 
	cr.TimeoutBase[TO_SK_REPAIR]=cr.Timeout[TO_SK_REPAIR]+::__FullSecond+REAL_SECOND(60)*1;
}

