// FOS Server
// Элементы ии мк2

// Базис для всех ии элементов, проверка относится ли объект к ии, cast<Ai::Descriptor>(@ref) !is null
interface Descriptor
{
	::string@ get_Name();
}

// Объект для интереса нпц
interface aiobject
{
	const uint get_MasterId( );
}

// Объект для интереса нпц
interface LifeObject
{
	// Получение контекста отношений к другому объекту
	Ai::Attitude@ GetAttitude( Ai::aiobject@ otherObj, Ai::Situation@ situation ); 
}

// Приоритет для объектов
interface Priority
{

}

// Отношение объектов
interface Attitude
{
	
}

// Ситуация
interface Situation
{
	
}

// Бой
class CombatSituation : Situation, Descriptor
{
	::string@ get_Name( ) override
	{
		return "CombatSituation";
	}
}

// Враг
class EnemyCritter : Attitude, Descriptor
{
	::string@ get_Name( ) override
	{
		return "EnemyCritter";
	}
}

class UnknowCritter : Attitude, Descriptor
{
	::string@ get_Name( ) override
	{
		return "UnknowCritter";
	}
}

class FriendCritter : Attitude, Descriptor
{
	::string@ get_Name( ) override
	{
		return "FriendCritter";
	}
}

class AttitudeMaster : Attitude, Descriptor
{
	::string@ get_Name()
	{
		return "AttitudeMaster";
	}
}