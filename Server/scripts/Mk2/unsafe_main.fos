// FOS Server

void ChangeItemMode(::Critter& player, int id, int mode ,int,::string@,::array<int>@)
{
	::Item@ item=::GetItem(id);
	if(validEngineObject(item) && item.Accessory == ACCESSORY_CRITTER)
	{
		if(item.CritId !=player.Id) return; 		// Защита от дохуя умных школоло-хацкеров лол. TabaK. 
		SetItemMode(item.Mode, uint8((mode)&0xF));
		item.Update();
	}
}

void MutePlayer(::Critter& player, int, int, int, ::string@, ::array<int>@)
{
	player.DamageBase[DAMAGE_TONGUE]=1;
	Log("Client Disconnect");
	player.Disconnect();
}

void SayAs(::Critter& player, int howSay, int, int, ::string@ text, ::array<int>@)
{
	::Critter@ victim=::GetCritter(player.Param[ST_SAYAS]);
	if(!validEngineObject(victim)) return;
	victim.Say(howSay, text);
}

void SetItemMode(uint8& mode, uint8 newMode)  //А хуле вы хотели? Без изврата никак - поле нередактируемое. 
{
	mode=newMode;
}

void DropAll(::Critter& cr, int,int,int,::string@ str,::array<int>@)
{
	::Map@ m=cr.GetMap();
	if(!validEngineObject(m) || !cr.IsLife()) return;
	if(cr.Stat[ST_CURRENT_AP]<4) return;
	::array<::Item@> items;
	for(uint n=0, nMax = cr.GetItems(SLOT_INV,items);n<nMax;n++)
	{
		if(!validEngineObject(items[n]) || isExplosive(items[n]) || items[n].GetProtoId()==Content::Item::SANDBAG_1 || items[n].GetProtoId()==Content::Item::ACTIVE_TRAP_PLANT_SPIKE)
		{
			@items[n] = null;
		}
		else 
		{
			items[n].EventDrop (cr);
			if( !validEngineObject(items[n]) )
				@items[n] = null;
		}
	}
	if(items.length()>0)
	{
		cr.StatBase[ST_CURRENT_AP]-=400;
		::MoveItems(items,m,cr.HexX,cr.HexY);
		_CritAnimatePickup(cr);
	}
}