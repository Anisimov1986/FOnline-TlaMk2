// FOS Client

void ModuleInit( )
{
	::__EventStart.Subscribe( @Start );
}

uint CountPlayers = 0;
uint Uptame = 0;
bool IsOnline = false;
bool IsActive = false;

// ThisModule::Option::LoginScreen::Sound
namespace Option
{
	namespace LoginScreen
	{
		string Sound = "LEVELUP.ACM";
		bool IsFlash = true;
	}
}

bool ScreenSchange( bool show, int screen, int p0, int p1, int p2 )
{
	if( IsActive && CLIENT_MAIN_SCREEN_LOGIN == screen )
	{
		if( show )	
		{
			if( ::PrepareWSA( ) == 0 )
				::__EventLoop.Subscribe( @Refresh, 250 );
		}
		else
		{
			int result = ::ClearWSA( ); 
			if( 0 != result )
				Log( "Error. WSA no clear <" + result + ">" );
			::__EventLoop.Unsubscribe( @Refresh );
		}
	}
	return true;
}

bool Refresh( uint& loop )
{
	loop = 1000;
	
	bool isDown = !IsOnline;
	
	::GetOnline( CountPlayers, Uptame );
	IsOnline = CountPlayers != 4000000000;
	
	if( isDown && IsOnline )
	{
		if( ThisModule::Option::LoginScreen::Sound != "" && ThisModule::Option::LoginScreen::Sound != "none" && ThisModule::Option::LoginScreen::Sound != "off" )
			PlaySound( ThisModule::Option::LoginScreen::Sound );
		if( ThisModule::Option::LoginScreen::IsFlash )
		{
			FlashWindow();
			SetFocus();
		}
	}
	
	return true;
}

void Start( )
{
	if( IniParser::IsKey( "LogOnlineChecker" ) )
	{		
		::__EventScreenChange.Subscribe( @ScreenSchange );
		
		IsActive = true;
		
		ThisModule::Renderer renderer;
		
		GUI_AddScreenElement( CLIENT_MAIN_SCREEN_LOGIN, null, renderer.Position )
			.CallbackDrawPos( renderer );
	}
}

class Renderer : IGUI::ElementCallbackDrawPos
{
	Renderer( )
	{
		@ Position = IniParser::GetCoord( "LogOnlineChecker" );
	}

	void OnDraw( int ScreenX, int ScreenY, int ElementX, int ElementY ) override
	{
		::DrawText( GetText( ), ScreenX + ElementX, ScreenY + ElementY, Position[2], Position[3], COLOR_RGB(25,135,25), FONT_FAT, FT_CENTERY);
	}
	
	::string GetText( )
	{
		if( !IsOnline )
			return "Status: offline";
			
		::string uptame = "";
		
		if( Uptame < 60 )
			uptame += Uptame + "s";
		else if( Uptame < 3600 )
		{
			int second = Uptame % 60;
			uptame += ( Uptame / 60 ) + "." + second + "m";
		}
		else 
		{
			int minute = ( Uptame % 3600 ) / 60;
			uptame += uint( float( Uptame ) / 3600 ) + "." + minute + "h";
		}
		return "Online: " + CountPlayers + " Uptame: " + uptame;
	}
	
	int[]@ Position;
}